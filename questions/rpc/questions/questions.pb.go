// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: questions.proto

package questions

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ActivitiesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actid int64 `protobuf:"varint,1,opt,name=actid,proto3" json:"actid,omitempty"`
}

func (x *ActivitiesReq) Reset() {
	*x = ActivitiesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivitiesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitiesReq) ProtoMessage() {}

func (x *ActivitiesReq) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitiesReq.ProtoReflect.Descriptor instead.
func (*ActivitiesReq) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{2}
}

func (x *ActivitiesReq) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

//返回问答抽奖活动信息
type ActInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Beid      int64  `protobuf:"varint,2,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid     int64  `protobuf:"varint,3,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	Title     string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Descr     string `protobuf:"bytes,5,opt,name=descr,proto3" json:"descr,omitempty"`
	Status    int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	StartDate int64  `protobuf:"varint,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   int64  `protobuf:"varint,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	GetScore  int64  `protobuf:"varint,9,opt,name=get_score,json=getScore,proto3" json:"get_score,omitempty"`
	Header    string `protobuf:"bytes,10,opt,name=header,proto3" json:"header,omitempty"`
	Des       string `protobuf:"bytes,11,opt,name=des,proto3" json:"des,omitempty"`
	Image     string `protobuf:"bytes,12,opt,name=image,proto3" json:"image,omitempty"`
	Rule      string `protobuf:"bytes,13,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *ActInfoResp) Reset() {
	*x = ActInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActInfoResp) ProtoMessage() {}

func (x *ActInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActInfoResp.ProtoReflect.Descriptor instead.
func (*ActInfoResp) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{3}
}

func (x *ActInfoResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActInfoResp) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *ActInfoResp) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *ActInfoResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActInfoResp) GetDescr() string {
	if x != nil {
		return x.Descr
	}
	return ""
}

func (x *ActInfoResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActInfoResp) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *ActInfoResp) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *ActInfoResp) GetGetScore() int64 {
	if x != nil {
		return x.GetScore
	}
	return 0
}

func (x *ActInfoResp) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *ActInfoResp) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *ActInfoResp) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ActInfoResp) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type AwardInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Beid             int64  `protobuf:"varint,2,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid            int64  `protobuf:"varint,3,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	Title            string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Des              string `protobuf:"bytes,5,opt,name=des,proto3" json:"des,omitempty"`
	Number           int64  `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	StartProbability int64  `protobuf:"varint,7,opt,name=start_probability,json=startProbability,proto3" json:"start_probability,omitempty"`
	EndProbability   int64  `protobuf:"varint,8,opt,name=end_probability,json=endProbability,proto3" json:"end_probability,omitempty"`
	ActivityId       int64  `protobuf:"varint,9,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	Header           string `protobuf:"bytes,10,opt,name=header,proto3" json:"header,omitempty"`
	Image            string `protobuf:"bytes,11,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *AwardInfoResp) Reset() {
	*x = AwardInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardInfoResp) ProtoMessage() {}

func (x *AwardInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardInfoResp.ProtoReflect.Descriptor instead.
func (*AwardInfoResp) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{4}
}

func (x *AwardInfoResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AwardInfoResp) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *AwardInfoResp) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *AwardInfoResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AwardInfoResp) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *AwardInfoResp) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *AwardInfoResp) GetStartProbability() int64 {
	if x != nil {
		return x.StartProbability
	}
	return 0
}

func (x *AwardInfoResp) GetEndProbability() int64 {
	if x != nil {
		return x.EndProbability
	}
	return 0
}

func (x *AwardInfoResp) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *AwardInfoResp) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *AwardInfoResp) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type AwardListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AwardInfoResp `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AwardListResp) Reset() {
	*x = AwardListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardListResp) ProtoMessage() {}

func (x *AwardListResp) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardListResp.ProtoReflect.Descriptor instead.
func (*AwardListResp) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{5}
}

func (x *AwardListResp) GetData() []*AwardInfoResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type QuestionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Beid       int64  `protobuf:"varint,2,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid      int64  `protobuf:"varint,3,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	Options    string `protobuf:"bytes,4,opt,name=Options,proto3" json:"Options,omitempty"`
	Corrent    string `protobuf:"bytes,5,opt,name=Corrent,proto3" json:"Corrent,omitempty"`
	Status     int64  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	Question   string `protobuf:"bytes,7,opt,name=Question,proto3" json:"Question,omitempty"`
	ActivityId int64  `protobuf:"varint,8,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
}

func (x *QuestionsResp) Reset() {
	*x = QuestionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionsResp) ProtoMessage() {}

func (x *QuestionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionsResp.ProtoReflect.Descriptor instead.
func (*QuestionsResp) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{6}
}

func (x *QuestionsResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionsResp) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *QuestionsResp) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *QuestionsResp) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *QuestionsResp) GetCorrent() string {
	if x != nil {
		return x.Corrent
	}
	return ""
}

func (x *QuestionsResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QuestionsResp) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionsResp) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type QuestionsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*QuestionsResp `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *QuestionsListResp) Reset() {
	*x = QuestionsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionsListResp) ProtoMessage() {}

func (x *QuestionsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionsListResp.ProtoReflect.Descriptor instead.
func (*QuestionsListResp) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{7}
}

func (x *QuestionsListResp) GetData() []*QuestionsResp {
	if x != nil {
		return x.Data
	}
	return nil
}

//答案提交
type QuestionsAnswerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beid       int64  `protobuf:"varint,1,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid      int64  `protobuf:"varint,2,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	ActivityId int64  `protobuf:"varint,3,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	Uid        int64  `protobuf:"varint,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Answers    string `protobuf:"bytes,5,opt,name=answers,proto3" json:"answers,omitempty"`
	Score      string `protobuf:"bytes,6,opt,name=score,proto3" json:"score,omitempty"`
	Auid       int64  `protobuf:"varint,7,opt,name=Auid,proto3" json:"Auid,omitempty"`
}

func (x *QuestionsAnswerReq) Reset() {
	*x = QuestionsAnswerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionsAnswerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionsAnswerReq) ProtoMessage() {}

func (x *QuestionsAnswerReq) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionsAnswerReq.ProtoReflect.Descriptor instead.
func (*QuestionsAnswerReq) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{8}
}

func (x *QuestionsAnswerReq) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *QuestionsAnswerReq) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *QuestionsAnswerReq) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *QuestionsAnswerReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QuestionsAnswerReq) GetAnswers() string {
	if x != nil {
		return x.Answers
	}
	return ""
}

func (x *QuestionsAnswerReq) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *QuestionsAnswerReq) GetAuid() int64 {
	if x != nil {
		return x.Auid
	}
	return 0
}

//问答返回
type QuestionsAnswerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int64  `protobuf:"varint,1,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	Score    string `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *QuestionsAnswerResp) Reset() {
	*x = QuestionsAnswerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionsAnswerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionsAnswerResp) ProtoMessage() {}

func (x *QuestionsAnswerResp) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionsAnswerResp.ProtoReflect.Descriptor instead.
func (*QuestionsAnswerResp) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{9}
}

func (x *QuestionsAnswerResp) GetAnswerId() int64 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *QuestionsAnswerResp) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

//得分
type GradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actid int64 `protobuf:"varint,1,opt,name=actid,proto3" json:"actid,omitempty"`
	Uid   int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Auid  int64 `protobuf:"varint,3,opt,name=Auid,proto3" json:"Auid,omitempty"`
}

func (x *GradeReq) Reset() {
	*x = GradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeReq) ProtoMessage() {}

func (x *GradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeReq.ProtoReflect.Descriptor instead.
func (*GradeReq) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{10}
}

func (x *GradeReq) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

func (x *GradeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GradeReq) GetAuid() int64 {
	if x != nil {
		return x.Auid
	}
	return 0
}

//抽奖
type TurnTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beid       int64 `protobuf:"varint,1,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid      int64 `protobuf:"varint,2,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	ActivityId int64 `protobuf:"varint,3,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	Uid        int64 `protobuf:"varint,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Auid       int64 `protobuf:"varint,5,opt,name=Auid,proto3" json:"Auid,omitempty"`
	AnswerId   int64 `protobuf:"varint,6,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *TurnTableReq) Reset() {
	*x = TurnTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TurnTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnTableReq) ProtoMessage() {}

func (x *TurnTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnTableReq.ProtoReflect.Descriptor instead.
func (*TurnTableReq) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{11}
}

func (x *TurnTableReq) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *TurnTableReq) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *TurnTableReq) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *TurnTableReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TurnTableReq) GetAuid() int64 {
	if x != nil {
		return x.Auid
	}
	return 0
}

func (x *TurnTableReq) GetAnswerId() int64 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

//兑奖
type ConvertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beid       int64  `protobuf:"varint,1,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid      int64  `protobuf:"varint,2,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	ActivityId int64  `protobuf:"varint,3,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	Uid        int64  `protobuf:"varint,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Auid       int64  `protobuf:"varint,5,opt,name=Auid,proto3" json:"Auid,omitempty"`
	LotteryId  int64  `protobuf:"varint,6,opt,name=LotteryId,proto3" json:"LotteryId,omitempty"`
	Username   string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	Phone      string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *ConvertReq) Reset() {
	*x = ConvertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertReq) ProtoMessage() {}

func (x *ConvertReq) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertReq.ProtoReflect.Descriptor instead.
func (*ConvertReq) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{12}
}

func (x *ConvertReq) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *ConvertReq) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *ConvertReq) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ConvertReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ConvertReq) GetAuid() int64 {
	if x != nil {
		return x.Auid
	}
	return 0
}

func (x *ConvertReq) GetLotteryId() int64 {
	if x != nil {
		return x.LotteryId
	}
	return 0
}

func (x *ConvertReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConvertReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ConvertResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	LotteryId  int64 `protobuf:"varint,2,opt,name=LotteryId,proto3" json:"LotteryId,omitempty"`
	ActivityId int64 `protobuf:"varint,3,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
}

func (x *ConvertResp) Reset() {
	*x = ConvertResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertResp) ProtoMessage() {}

func (x *ConvertResp) ProtoReflect() protoreflect.Message {
	mi := &file_questions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertResp.ProtoReflect.Descriptor instead.
func (*ConvertResp) Descriptor() ([]byte, []int) {
	return file_questions_proto_rawDescGZIP(), []int{13}
}

func (x *ConvertResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConvertResp) GetLotteryId() int64 {
	if x != nil {
		return x.LotteryId
	}
	return 0
}

func (x *ConvertResp) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

var File_questions_proto protoreflect.FileDescriptor

var file_questions_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1d, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x25, 0x0a, 0x0d, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x63, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x63, 0x74,
	0x69, 0x64, 0x22, 0xb6, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x62, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x65,
	0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67,
	0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0xad, 0x02, 0x0a, 0x0d,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x62,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd1, 0x01, 0x0a, 0x0d, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x41,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb4, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x74, 0x79, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x74, 0x79,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x41, 0x75, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x46, 0x0a, 0x08, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61,
	0x63, 0x74, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x41, 0x75, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x0c, 0x54,
	0x75, 0x72, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x74, 0x79, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x41, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x74, 0x79, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x74, 0x79, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x41, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x6f, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x5b, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x32, 0xc8, 0x04, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a,
	0x13, 0x50, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x0d, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x17,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x12, 0x15, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_questions_proto_rawDescOnce sync.Once
	file_questions_proto_rawDescData = file_questions_proto_rawDesc
)

func file_questions_proto_rawDescGZIP() []byte {
	file_questions_proto_rawDescOnce.Do(func() {
		file_questions_proto_rawDescData = protoimpl.X.CompressGZIP(file_questions_proto_rawDescData)
	})
	return file_questions_proto_rawDescData
}

var file_questions_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_questions_proto_goTypes = []interface{}{
	(*Request)(nil),             // 0: questions.Request
	(*Response)(nil),            // 1: questions.Response
	(*ActivitiesReq)(nil),       // 2: questions.ActivitiesReq
	(*ActInfoResp)(nil),         // 3: questions.ActInfoResp
	(*AwardInfoResp)(nil),       // 4: questions.AwardInfoResp
	(*AwardListResp)(nil),       // 5: questions.AwardListResp
	(*QuestionsResp)(nil),       // 6: questions.questionsResp
	(*QuestionsListResp)(nil),   // 7: questions.QuestionsListResp
	(*QuestionsAnswerReq)(nil),  // 8: questions.QuestionsAnswerReq
	(*QuestionsAnswerResp)(nil), // 9: questions.QuestionsAnswerResp
	(*GradeReq)(nil),            // 10: questions.GradeReq
	(*TurnTableReq)(nil),        // 11: questions.TurnTableReq
	(*ConvertReq)(nil),          // 12: questions.ConvertReq
	(*ConvertResp)(nil),         // 13: questions.ConvertResp
}
var file_questions_proto_depIdxs = []int32{
	4,  // 0: questions.AwardListResp.data:type_name -> questions.AwardInfoResp
	6,  // 1: questions.QuestionsListResp.data:type_name -> questions.questionsResp
	2,  // 2: questions.Questions.GetActivitiesInfo:input_type -> questions.ActivitiesReq
	2,  // 3: questions.Questions.GetAwardInfo:input_type -> questions.ActivitiesReq
	2,  // 4: questions.Questions.GetAwardList:input_type -> questions.ActivitiesReq
	2,  // 5: questions.Questions.GetQuestionsList:input_type -> questions.ActivitiesReq
	8,  // 6: questions.Questions.PostQuestionsChange:input_type -> questions.QuestionsAnswerReq
	10, // 7: questions.Questions.GetQuestionsGrade:input_type -> questions.GradeReq
	11, // 8: questions.Questions.PostTurnTable:input_type -> questions.TurnTableReq
	12, // 9: questions.Questions.PostConvert:input_type -> questions.ConvertReq
	3,  // 10: questions.Questions.GetActivitiesInfo:output_type -> questions.ActInfoResp
	4,  // 11: questions.Questions.GetAwardInfo:output_type -> questions.AwardInfoResp
	5,  // 12: questions.Questions.GetAwardList:output_type -> questions.AwardListResp
	7,  // 13: questions.Questions.GetQuestionsList:output_type -> questions.QuestionsListResp
	9,  // 14: questions.Questions.PostQuestionsChange:output_type -> questions.QuestionsAnswerResp
	9,  // 15: questions.Questions.GetQuestionsGrade:output_type -> questions.QuestionsAnswerResp
	4,  // 16: questions.Questions.PostTurnTable:output_type -> questions.AwardInfoResp
	13, // 17: questions.Questions.PostConvert:output_type -> questions.ConvertResp
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_questions_proto_init() }
func file_questions_proto_init() {
	if File_questions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_questions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivitiesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionsAnswerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionsAnswerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TurnTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_questions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_questions_proto_goTypes,
		DependencyIndexes: file_questions_proto_depIdxs,
		MessageInfos:      file_questions_proto_msgTypes,
	}.Build()
	File_questions_proto = out.File
	file_questions_proto_rawDesc = nil
	file_questions_proto_goTypes = nil
	file_questions_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QuestionsClient is the client API for Questions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuestionsClient interface {
	//获取 问答抽奖活动信息
	GetActivitiesInfo(ctx context.Context, in *ActivitiesReq, opts ...grpc.CallOption) (*ActInfoResp, error)
	//获取 问答奖品信息
	GetAwardInfo(ctx context.Context, in *ActivitiesReq, opts ...grpc.CallOption) (*AwardInfoResp, error)
	//获取 问答奖品列表
	GetAwardList(ctx context.Context, in *ActivitiesReq, opts ...grpc.CallOption) (*AwardListResp, error)
	//获取 问题列表
	GetQuestionsList(ctx context.Context, in *ActivitiesReq, opts ...grpc.CallOption) (*QuestionsListResp, error)
	// 提交 答案
	PostQuestionsChange(ctx context.Context, in *QuestionsAnswerReq, opts ...grpc.CallOption) (*QuestionsAnswerResp, error)
	//获取得分
	GetQuestionsGrade(ctx context.Context, in *GradeReq, opts ...grpc.CallOption) (*QuestionsAnswerResp, error)
	//抽奖
	PostTurnTable(ctx context.Context, in *TurnTableReq, opts ...grpc.CallOption) (*AwardInfoResp, error)
	//填写中奖记录
	PostConvert(ctx context.Context, in *ConvertReq, opts ...grpc.CallOption) (*ConvertResp, error)
}

type questionsClient struct {
	cc grpc.ClientConnInterface
}

func NewQuestionsClient(cc grpc.ClientConnInterface) QuestionsClient {
	return &questionsClient{cc}
}

func (c *questionsClient) GetActivitiesInfo(ctx context.Context, in *ActivitiesReq, opts ...grpc.CallOption) (*ActInfoResp, error) {
	out := new(ActInfoResp)
	err := c.cc.Invoke(ctx, "/questions.Questions/GetActivitiesInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionsClient) GetAwardInfo(ctx context.Context, in *ActivitiesReq, opts ...grpc.CallOption) (*AwardInfoResp, error) {
	out := new(AwardInfoResp)
	err := c.cc.Invoke(ctx, "/questions.Questions/GetAwardInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionsClient) GetAwardList(ctx context.Context, in *ActivitiesReq, opts ...grpc.CallOption) (*AwardListResp, error) {
	out := new(AwardListResp)
	err := c.cc.Invoke(ctx, "/questions.Questions/GetAwardList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionsClient) GetQuestionsList(ctx context.Context, in *ActivitiesReq, opts ...grpc.CallOption) (*QuestionsListResp, error) {
	out := new(QuestionsListResp)
	err := c.cc.Invoke(ctx, "/questions.Questions/GetQuestionsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionsClient) PostQuestionsChange(ctx context.Context, in *QuestionsAnswerReq, opts ...grpc.CallOption) (*QuestionsAnswerResp, error) {
	out := new(QuestionsAnswerResp)
	err := c.cc.Invoke(ctx, "/questions.Questions/PostQuestionsChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionsClient) GetQuestionsGrade(ctx context.Context, in *GradeReq, opts ...grpc.CallOption) (*QuestionsAnswerResp, error) {
	out := new(QuestionsAnswerResp)
	err := c.cc.Invoke(ctx, "/questions.Questions/GetQuestionsGrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionsClient) PostTurnTable(ctx context.Context, in *TurnTableReq, opts ...grpc.CallOption) (*AwardInfoResp, error) {
	out := new(AwardInfoResp)
	err := c.cc.Invoke(ctx, "/questions.Questions/PostTurnTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *questionsClient) PostConvert(ctx context.Context, in *ConvertReq, opts ...grpc.CallOption) (*ConvertResp, error) {
	out := new(ConvertResp)
	err := c.cc.Invoke(ctx, "/questions.Questions/PostConvert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuestionsServer is the server API for Questions service.
type QuestionsServer interface {
	//获取 问答抽奖活动信息
	GetActivitiesInfo(context.Context, *ActivitiesReq) (*ActInfoResp, error)
	//获取 问答奖品信息
	GetAwardInfo(context.Context, *ActivitiesReq) (*AwardInfoResp, error)
	//获取 问答奖品列表
	GetAwardList(context.Context, *ActivitiesReq) (*AwardListResp, error)
	//获取 问题列表
	GetQuestionsList(context.Context, *ActivitiesReq) (*QuestionsListResp, error)
	// 提交 答案
	PostQuestionsChange(context.Context, *QuestionsAnswerReq) (*QuestionsAnswerResp, error)
	//获取得分
	GetQuestionsGrade(context.Context, *GradeReq) (*QuestionsAnswerResp, error)
	//抽奖
	PostTurnTable(context.Context, *TurnTableReq) (*AwardInfoResp, error)
	//填写中奖记录
	PostConvert(context.Context, *ConvertReq) (*ConvertResp, error)
}

// UnimplementedQuestionsServer can be embedded to have forward compatible implementations.
type UnimplementedQuestionsServer struct {
}

func (*UnimplementedQuestionsServer) GetActivitiesInfo(context.Context, *ActivitiesReq) (*ActInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivitiesInfo not implemented")
}
func (*UnimplementedQuestionsServer) GetAwardInfo(context.Context, *ActivitiesReq) (*AwardInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAwardInfo not implemented")
}
func (*UnimplementedQuestionsServer) GetAwardList(context.Context, *ActivitiesReq) (*AwardListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAwardList not implemented")
}
func (*UnimplementedQuestionsServer) GetQuestionsList(context.Context, *ActivitiesReq) (*QuestionsListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuestionsList not implemented")
}
func (*UnimplementedQuestionsServer) PostQuestionsChange(context.Context, *QuestionsAnswerReq) (*QuestionsAnswerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostQuestionsChange not implemented")
}
func (*UnimplementedQuestionsServer) GetQuestionsGrade(context.Context, *GradeReq) (*QuestionsAnswerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuestionsGrade not implemented")
}
func (*UnimplementedQuestionsServer) PostTurnTable(context.Context, *TurnTableReq) (*AwardInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTurnTable not implemented")
}
func (*UnimplementedQuestionsServer) PostConvert(context.Context, *ConvertReq) (*ConvertResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostConvert not implemented")
}

func RegisterQuestionsServer(s *grpc.Server, srv QuestionsServer) {
	s.RegisterService(&_Questions_serviceDesc, srv)
}

func _Questions_GetActivitiesInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivitiesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).GetActivitiesInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/questions.Questions/GetActivitiesInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).GetActivitiesInfo(ctx, req.(*ActivitiesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Questions_GetAwardInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivitiesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).GetAwardInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/questions.Questions/GetAwardInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).GetAwardInfo(ctx, req.(*ActivitiesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Questions_GetAwardList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivitiesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).GetAwardList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/questions.Questions/GetAwardList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).GetAwardList(ctx, req.(*ActivitiesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Questions_GetQuestionsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivitiesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).GetQuestionsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/questions.Questions/GetQuestionsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).GetQuestionsList(ctx, req.(*ActivitiesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Questions_PostQuestionsChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuestionsAnswerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).PostQuestionsChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/questions.Questions/PostQuestionsChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).PostQuestionsChange(ctx, req.(*QuestionsAnswerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Questions_GetQuestionsGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GradeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).GetQuestionsGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/questions.Questions/GetQuestionsGrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).GetQuestionsGrade(ctx, req.(*GradeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Questions_PostTurnTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TurnTableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).PostTurnTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/questions.Questions/PostTurnTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).PostTurnTable(ctx, req.(*TurnTableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Questions_PostConvert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConvertReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuestionsServer).PostConvert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/questions.Questions/PostConvert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuestionsServer).PostConvert(ctx, req.(*ConvertReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Questions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "questions.Questions",
	HandlerType: (*QuestionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetActivitiesInfo",
			Handler:    _Questions_GetActivitiesInfo_Handler,
		},
		{
			MethodName: "GetAwardInfo",
			Handler:    _Questions_GetAwardInfo_Handler,
		},
		{
			MethodName: "GetAwardList",
			Handler:    _Questions_GetAwardList_Handler,
		},
		{
			MethodName: "GetQuestionsList",
			Handler:    _Questions_GetQuestionsList_Handler,
		},
		{
			MethodName: "PostQuestionsChange",
			Handler:    _Questions_PostQuestionsChange_Handler,
		},
		{
			MethodName: "GetQuestionsGrade",
			Handler:    _Questions_GetQuestionsGrade_Handler,
		},
		{
			MethodName: "PostTurnTable",
			Handler:    _Questions_PostTurnTable_Handler,
		},
		{
			MethodName: "PostConvert",
			Handler:    _Questions_PostConvert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "questions.proto",
}
