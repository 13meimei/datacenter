// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: votes.proto

package votes

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ActidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actid   int64     `protobuf:"varint,1,opt,name=actid,proto3" json:"actid,omitempty"`
	Limit   *LimitReq `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Keyword string    `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *ActidReq) Reset() {
	*x = ActidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActidReq) ProtoMessage() {}

func (x *ActidReq) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActidReq.ProtoReflect.Descriptor instead.
func (*ActidReq) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{0}
}

func (x *ActidReq) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

func (x *ActidReq) GetLimit() *LimitReq {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *ActidReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type ActInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actid int64 `protobuf:"varint,1,opt,name=actid,proto3" json:"actid,omitempty"`
}

func (x *ActInfoReq) Reset() {
	*x = ActInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActInfoReq) ProtoMessage() {}

func (x *ActInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActInfoReq.ProtoReflect.Descriptor instead.
func (*ActInfoReq) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{1}
}

func (x *ActInfoReq) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

type LimitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *LimitReq) Reset() {
	*x = LimitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitReq) ProtoMessage() {}

func (x *LimitReq) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitReq.ProtoReflect.Descriptor instead.
func (*LimitReq) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{2}
}

func (x *LimitReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LimitReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type EnrollInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aeid  int64 `protobuf:"varint,1,opt,name=aeid,proto3" json:"aeid,omitempty"`
	Actid int64 `protobuf:"varint,2,opt,name=actid,proto3" json:"actid,omitempty"`
}

func (x *EnrollInfoReq) Reset() {
	*x = EnrollInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollInfoReq) ProtoMessage() {}

func (x *EnrollInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollInfoReq.ProtoReflect.Descriptor instead.
func (*EnrollInfoReq) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{3}
}

func (x *EnrollInfoReq) GetAeid() int64 {
	if x != nil {
		return x.Aeid
	}
	return 0
}

func (x *EnrollInfoReq) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

//报名 请求
type EnrollReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auid    int64  `protobuf:"varint,1,opt,name=auid,proto3" json:"auid,omitempty"`
	Beid    int64  `protobuf:"varint,2,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid   int64  `protobuf:"varint,3,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	Uid     int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Name    string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Images  string `protobuf:"bytes,7,opt,name=images,proto3" json:"images,omitempty"`
	Descr   string `protobuf:"bytes,8,opt,name=descr,proto3" json:"descr,omitempty"`
	Actid   int64  `protobuf:"varint,9,opt,name=actid,proto3" json:"actid,omitempty"`
}

func (x *EnrollReq) Reset() {
	*x = EnrollReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollReq) ProtoMessage() {}

func (x *EnrollReq) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollReq.ProtoReflect.Descriptor instead.
func (*EnrollReq) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{4}
}

func (x *EnrollReq) GetAuid() int64 {
	if x != nil {
		return x.Auid
	}
	return 0
}

func (x *EnrollReq) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *EnrollReq) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *EnrollReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *EnrollReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnrollReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EnrollReq) GetImages() string {
	if x != nil {
		return x.Images
	}
	return ""
}

func (x *EnrollReq) GetDescr() string {
	if x != nil {
		return x.Descr
	}
	return ""
}

func (x *EnrollReq) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

//报名返回
type EnrollResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auid      int64    `protobuf:"varint,1,opt,name=auid,proto3" json:"auid,omitempty"`
	Beid      int64    `protobuf:"varint,2,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid     int64    `protobuf:"varint,3,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	Uid       int64    `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Name      string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Address   string   `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Images    []string `protobuf:"bytes,7,rep,name=images,proto3" json:"images,omitempty"`
	Descr     string   `protobuf:"bytes,8,opt,name=descr,proto3" json:"descr,omitempty"`
	Votecount int64    `protobuf:"varint,9,opt,name=votecount,proto3" json:"votecount,omitempty"`
	Viewcount int64    `protobuf:"varint,10,opt,name=viewcount,proto3" json:"viewcount,omitempty"`
	Aeid      int64    `protobuf:"varint,11,opt,name=aeid,proto3" json:"aeid,omitempty"`
	Actid     int64    `protobuf:"varint,12,opt,name=actid,proto3" json:"actid,omitempty"`
}

func (x *EnrollResp) Reset() {
	*x = EnrollResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollResp) ProtoMessage() {}

func (x *EnrollResp) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollResp.ProtoReflect.Descriptor instead.
func (*EnrollResp) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{5}
}

func (x *EnrollResp) GetAuid() int64 {
	if x != nil {
		return x.Auid
	}
	return 0
}

func (x *EnrollResp) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *EnrollResp) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *EnrollResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *EnrollResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnrollResp) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EnrollResp) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *EnrollResp) GetDescr() string {
	if x != nil {
		return x.Descr
	}
	return ""
}

func (x *EnrollResp) GetVotecount() int64 {
	if x != nil {
		return x.Votecount
	}
	return 0
}

func (x *EnrollResp) GetViewcount() int64 {
	if x != nil {
		return x.Viewcount
	}
	return 0
}

func (x *EnrollResp) GetAeid() int64 {
	if x != nil {
		return x.Aeid
	}
	return 0
}

func (x *EnrollResp) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

//返回列表
type EnrollListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*EnrollResp `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *EnrollListResp) Reset() {
	*x = EnrollListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollListResp) ProtoMessage() {}

func (x *EnrollListResp) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollListResp.ProtoReflect.Descriptor instead.
func (*EnrollListResp) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{6}
}

func (x *EnrollListResp) GetData() []*EnrollResp {
	if x != nil {
		return x.Data
	}
	return nil
}

//投票
type VotesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auid  int64  `protobuf:"varint,1,opt,name=auid,proto3" json:"auid,omitempty"`
	Beid  int64  `protobuf:"varint,2,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid int64  `protobuf:"varint,3,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	Uid   int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Actid int64  `protobuf:"varint,5,opt,name=actid,proto3" json:"actid,omitempty"`
	Aeid  int64  `protobuf:"varint,6,opt,name=aeid,proto3" json:"aeid,omitempty"`
	Ip    string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *VotesReq) Reset() {
	*x = VotesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotesReq) ProtoMessage() {}

func (x *VotesReq) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotesReq.ProtoReflect.Descriptor instead.
func (*VotesReq) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{7}
}

func (x *VotesReq) GetAuid() int64 {
	if x != nil {
		return x.Auid
	}
	return 0
}

func (x *VotesReq) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *VotesReq) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *VotesReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *VotesReq) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

func (x *VotesReq) GetAeid() int64 {
	if x != nil {
		return x.Aeid
	}
	return 0
}

func (x *VotesReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

//返回票数
type VotesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auid      int64 `protobuf:"varint,1,opt,name=auid,proto3" json:"auid,omitempty"`
	Beid      int64 `protobuf:"varint,2,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid     int64 `protobuf:"varint,3,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	Uid       int64 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Avid      int64 `protobuf:"varint,5,opt,name=avid,proto3" json:"avid,omitempty"`
	Aeid      int64 `protobuf:"varint,6,opt,name=aeid,proto3" json:"aeid,omitempty"`
	Votecount int64 `protobuf:"varint,7,opt,name=votecount,proto3" json:"votecount,omitempty"`
	Viewcount int64 `protobuf:"varint,8,opt,name=viewcount,proto3" json:"viewcount,omitempty"`
}

func (x *VotesResp) Reset() {
	*x = VotesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotesResp) ProtoMessage() {}

func (x *VotesResp) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotesResp.ProtoReflect.Descriptor instead.
func (*VotesResp) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{8}
}

func (x *VotesResp) GetAuid() int64 {
	if x != nil {
		return x.Auid
	}
	return 0
}

func (x *VotesResp) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *VotesResp) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *VotesResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *VotesResp) GetAvid() int64 {
	if x != nil {
		return x.Avid
	}
	return 0
}

func (x *VotesResp) GetAeid() int64 {
	if x != nil {
		return x.Aeid
	}
	return 0
}

func (x *VotesResp) GetVotecount() int64 {
	if x != nil {
		return x.Votecount
	}
	return 0
}

func (x *VotesResp) GetViewcount() int64 {
	if x != nil {
		return x.Viewcount
	}
	return 0
}

//返回活动信息
type ActInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actid       int64  `protobuf:"varint,1,opt,name=actid,proto3" json:"actid,omitempty"`
	Beid        int64  `protobuf:"varint,2,opt,name=beid,proto3" json:"beid,omitempty"`
	Ptyid       int64  `protobuf:"varint,3,opt,name=ptyid,proto3" json:"ptyid,omitempty"`
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Descr       string `protobuf:"bytes,5,opt,name=descr,proto3" json:"descr,omitempty"`
	Status      int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	StartDate   int64  `protobuf:"varint,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EnrollDate  int64  `protobuf:"varint,8,opt,name=enroll_date,json=enrollDate,proto3" json:"enroll_date,omitempty"`
	EndDate     int64  `protobuf:"varint,9,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Votecount   int64  `protobuf:"varint,10,opt,name=votecount,proto3" json:"votecount,omitempty"`
	Viewcount   int64  `protobuf:"varint,11,opt,name=viewcount,proto3" json:"viewcount,omitempty"`
	Type        int64  `protobuf:"varint,12,opt,name=type,proto3" json:"type,omitempty"`
	Num         int64  `protobuf:"varint,13,opt,name=num,proto3" json:"num,omitempty"`
	Enrollcount int64  `protobuf:"varint,14,opt,name=enrollcount,proto3" json:"enrollcount,omitempty"`
}

func (x *ActInfoResp) Reset() {
	*x = ActInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_votes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActInfoResp) ProtoMessage() {}

func (x *ActInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_votes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActInfoResp.ProtoReflect.Descriptor instead.
func (*ActInfoResp) Descriptor() ([]byte, []int) {
	return file_votes_proto_rawDescGZIP(), []int{9}
}

func (x *ActInfoResp) GetActid() int64 {
	if x != nil {
		return x.Actid
	}
	return 0
}

func (x *ActInfoResp) GetBeid() int64 {
	if x != nil {
		return x.Beid
	}
	return 0
}

func (x *ActInfoResp) GetPtyid() int64 {
	if x != nil {
		return x.Ptyid
	}
	return 0
}

func (x *ActInfoResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActInfoResp) GetDescr() string {
	if x != nil {
		return x.Descr
	}
	return ""
}

func (x *ActInfoResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActInfoResp) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *ActInfoResp) GetEnrollDate() int64 {
	if x != nil {
		return x.EnrollDate
	}
	return 0
}

func (x *ActInfoResp) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *ActInfoResp) GetVotecount() int64 {
	if x != nil {
		return x.Votecount
	}
	return 0
}

func (x *ActInfoResp) GetViewcount() int64 {
	if x != nil {
		return x.Viewcount
	}
	return 0
}

func (x *ActInfoResp) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ActInfoResp) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ActInfoResp) GetEnrollcount() int64 {
	if x != nil {
		return x.Enrollcount
	}
	return 0
}

var File_votes_proto protoreflect.FileDescriptor

var file_votes_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76,
	0x6f, 0x74, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x22, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x08, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x61, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x22, 0xcd,
	0x01, 0x0a, 0x09, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x62, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x22, 0x9e,
	0x02, 0x0a, 0x0a, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x62, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x74,
	0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x6f,
	0x74, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x65, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x22,
	0x37, 0x0a, 0x0e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x56, 0x6f, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x74,
	0x79, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x65, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x65, 0x69, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22,
	0xbf, 0x01, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x62, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x74, 0x79, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x76, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x76, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x65, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x61, 0x65, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xf0, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x74, 0x79, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x74, 0x79, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0xc8, 0x02, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x38,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x76, 0x6f, 0x74, 0x65,
	0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x76, 0x6f, 0x74,
	0x65, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x38, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e,
	0x41, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x06, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x10, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x05, 0x56, 0x6f,
	0x74, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x56, 0x69, 0x65, 0x77, 0x12, 0x11, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x73,
	0x2e, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x76, 0x6f,
	0x74, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_votes_proto_rawDescOnce sync.Once
	file_votes_proto_rawDescData = file_votes_proto_rawDesc
)

func file_votes_proto_rawDescGZIP() []byte {
	file_votes_proto_rawDescOnce.Do(func() {
		file_votes_proto_rawDescData = protoimpl.X.CompressGZIP(file_votes_proto_rawDescData)
	})
	return file_votes_proto_rawDescData
}

var file_votes_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_votes_proto_goTypes = []interface{}{
	(*ActidReq)(nil),       // 0: votes.ActidReq
	(*ActInfoReq)(nil),     // 1: votes.ActInfoReq
	(*LimitReq)(nil),       // 2: votes.LimitReq
	(*EnrollInfoReq)(nil),  // 3: votes.EnrollInfoReq
	(*EnrollReq)(nil),      // 4: votes.EnrollReq
	(*EnrollResp)(nil),     // 5: votes.EnrollResp
	(*EnrollListResp)(nil), // 6: votes.EnrollListResp
	(*VotesReq)(nil),       // 7: votes.VotesReq
	(*VotesResp)(nil),      // 8: votes.VotesResp
	(*ActInfoResp)(nil),    // 9: votes.ActInfoResp
}
var file_votes_proto_depIdxs = []int32{
	2, // 0: votes.ActidReq.limit:type_name -> votes.LimitReq
	5, // 1: votes.EnrollListResp.data:type_name -> votes.EnrollResp
	3, // 2: votes.Votes.GetEnrollInfo:input_type -> votes.EnrollInfoReq
	0, // 3: votes.Votes.GetEnrollList:input_type -> votes.ActidReq
	1, // 4: votes.Votes.GetActivityInfo:input_type -> votes.ActInfoReq
	4, // 5: votes.Votes.Enroll:input_type -> votes.EnrollReq
	7, // 6: votes.Votes.Votes:input_type -> votes.VotesReq
	1, // 7: votes.Votes.IncrActiviView:input_type -> votes.ActInfoReq
	5, // 8: votes.Votes.GetEnrollInfo:output_type -> votes.EnrollResp
	6, // 9: votes.Votes.GetEnrollList:output_type -> votes.EnrollListResp
	9, // 10: votes.Votes.GetActivityInfo:output_type -> votes.ActInfoResp
	5, // 11: votes.Votes.Enroll:output_type -> votes.EnrollResp
	8, // 12: votes.Votes.Votes:output_type -> votes.VotesResp
	9, // 13: votes.Votes.IncrActiviView:output_type -> votes.ActInfoResp
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_votes_proto_init() }
func file_votes_proto_init() {
	if File_votes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_votes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_votes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_votes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_votes_proto_goTypes,
		DependencyIndexes: file_votes_proto_depIdxs,
		MessageInfos:      file_votes_proto_msgTypes,
	}.Build()
	File_votes_proto = out.File
	file_votes_proto_rawDesc = nil
	file_votes_proto_goTypes = nil
	file_votes_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VotesClient is the client API for Votes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VotesClient interface {
	//获取作品信息
	GetEnrollInfo(ctx context.Context, in *EnrollInfoReq, opts ...grpc.CallOption) (*EnrollResp, error)
	//获取 作品列表
	GetEnrollList(ctx context.Context, in *ActidReq, opts ...grpc.CallOption) (*EnrollListResp, error)
	//获取 活动信息
	GetActivityInfo(ctx context.Context, in *ActInfoReq, opts ...grpc.CallOption) (*ActInfoResp, error)
	//报名
	Enroll(ctx context.Context, in *EnrollReq, opts ...grpc.CallOption) (*EnrollResp, error)
	//投票
	Votes(ctx context.Context, in *VotesReq, opts ...grpc.CallOption) (*VotesResp, error)
	//增加活动的爆光量
	IncrActiviView(ctx context.Context, in *ActInfoReq, opts ...grpc.CallOption) (*ActInfoResp, error)
}

type votesClient struct {
	cc grpc.ClientConnInterface
}

func NewVotesClient(cc grpc.ClientConnInterface) VotesClient {
	return &votesClient{cc}
}

func (c *votesClient) GetEnrollInfo(ctx context.Context, in *EnrollInfoReq, opts ...grpc.CallOption) (*EnrollResp, error) {
	out := new(EnrollResp)
	err := c.cc.Invoke(ctx, "/votes.Votes/GetEnrollInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *votesClient) GetEnrollList(ctx context.Context, in *ActidReq, opts ...grpc.CallOption) (*EnrollListResp, error) {
	out := new(EnrollListResp)
	err := c.cc.Invoke(ctx, "/votes.Votes/GetEnrollList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *votesClient) GetActivityInfo(ctx context.Context, in *ActInfoReq, opts ...grpc.CallOption) (*ActInfoResp, error) {
	out := new(ActInfoResp)
	err := c.cc.Invoke(ctx, "/votes.Votes/GetActivityInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *votesClient) Enroll(ctx context.Context, in *EnrollReq, opts ...grpc.CallOption) (*EnrollResp, error) {
	out := new(EnrollResp)
	err := c.cc.Invoke(ctx, "/votes.Votes/Enroll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *votesClient) Votes(ctx context.Context, in *VotesReq, opts ...grpc.CallOption) (*VotesResp, error) {
	out := new(VotesResp)
	err := c.cc.Invoke(ctx, "/votes.Votes/Votes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *votesClient) IncrActiviView(ctx context.Context, in *ActInfoReq, opts ...grpc.CallOption) (*ActInfoResp, error) {
	out := new(ActInfoResp)
	err := c.cc.Invoke(ctx, "/votes.Votes/IncrActiviView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VotesServer is the server API for Votes service.
type VotesServer interface {
	//获取作品信息
	GetEnrollInfo(context.Context, *EnrollInfoReq) (*EnrollResp, error)
	//获取 作品列表
	GetEnrollList(context.Context, *ActidReq) (*EnrollListResp, error)
	//获取 活动信息
	GetActivityInfo(context.Context, *ActInfoReq) (*ActInfoResp, error)
	//报名
	Enroll(context.Context, *EnrollReq) (*EnrollResp, error)
	//投票
	Votes(context.Context, *VotesReq) (*VotesResp, error)
	//增加活动的爆光量
	IncrActiviView(context.Context, *ActInfoReq) (*ActInfoResp, error)
}

// UnimplementedVotesServer can be embedded to have forward compatible implementations.
type UnimplementedVotesServer struct {
}

func (*UnimplementedVotesServer) GetEnrollInfo(context.Context, *EnrollInfoReq) (*EnrollResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnrollInfo not implemented")
}
func (*UnimplementedVotesServer) GetEnrollList(context.Context, *ActidReq) (*EnrollListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnrollList not implemented")
}
func (*UnimplementedVotesServer) GetActivityInfo(context.Context, *ActInfoReq) (*ActInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivityInfo not implemented")
}
func (*UnimplementedVotesServer) Enroll(context.Context, *EnrollReq) (*EnrollResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Enroll not implemented")
}
func (*UnimplementedVotesServer) Votes(context.Context, *VotesReq) (*VotesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Votes not implemented")
}
func (*UnimplementedVotesServer) IncrActiviView(context.Context, *ActInfoReq) (*ActInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncrActiviView not implemented")
}

func RegisterVotesServer(s *grpc.Server, srv VotesServer) {
	s.RegisterService(&_Votes_serviceDesc, srv)
}

func _Votes_GetEnrollInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnrollInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VotesServer).GetEnrollInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/votes.Votes/GetEnrollInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VotesServer).GetEnrollInfo(ctx, req.(*EnrollInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Votes_GetEnrollList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VotesServer).GetEnrollList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/votes.Votes/GetEnrollList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VotesServer).GetEnrollList(ctx, req.(*ActidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Votes_GetActivityInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VotesServer).GetActivityInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/votes.Votes/GetActivityInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VotesServer).GetActivityInfo(ctx, req.(*ActInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Votes_Enroll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnrollReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VotesServer).Enroll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/votes.Votes/Enroll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VotesServer).Enroll(ctx, req.(*EnrollReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Votes_Votes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VotesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VotesServer).Votes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/votes.Votes/Votes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VotesServer).Votes(ctx, req.(*VotesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Votes_IncrActiviView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VotesServer).IncrActiviView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/votes.Votes/IncrActiviView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VotesServer).IncrActiviView(ctx, req.(*ActInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Votes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "votes.Votes",
	HandlerType: (*VotesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEnrollInfo",
			Handler:    _Votes_GetEnrollInfo_Handler,
		},
		{
			MethodName: "GetEnrollList",
			Handler:    _Votes_GetEnrollList_Handler,
		},
		{
			MethodName: "GetActivityInfo",
			Handler:    _Votes_GetActivityInfo_Handler,
		},
		{
			MethodName: "Enroll",
			Handler:    _Votes_Enroll_Handler,
		},
		{
			MethodName: "Votes",
			Handler:    _Votes_Votes_Handler,
		},
		{
			MethodName: "IncrActiviView",
			Handler:    _Votes_IncrActiviView_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "votes.proto",
}
